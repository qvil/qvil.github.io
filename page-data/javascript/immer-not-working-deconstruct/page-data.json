{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/javascript/immer-not-working-deconstruct","result":{"data":{"post":{"__typename":"MdxPost","slug":"/javascript/immer-not-working-deconstruct","title":"immer는 객체 비구조화 문법(Object Destructuring)을 사용하면 동작하지 않는다.","date":"2019.09.19","tags":[{"name":"javascript","slug":"javascript"},{"name":"immer","slug":"immer"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"immer는 객체 비구조화 문법(Object Destructuring)을 사용하면 동작하지 않는다.\",\n  \"date\": \"2019-09-19 19:32:42 +0900\",\n  \"categories\": \"javascript\",\n  \"tags\": [\"javascript\", \"immer\"],\n  \"comments\": true,\n  \"share\": true,\n  \"slug\": \"javascript/immer-not-working-deconstruct\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"https://github.com/immerjs/immer\"\n  }), \"immer\"), \"\\uB294 \\uAC1D\\uCCB4 \\uBE44\\uAD6C\\uC870\\uD654 \\uBB38\\uBC95(Object Destructuring)\\uC744 \\uC0AC\\uC6A9\\uD558\\uBA74 \\uB3D9\\uC791\\uD558\\uC9C0 \\uC54A\\uB294\\uB2E4.\"), mdx(\"p\", null, \"\\uC544\\uB798\\uB294 redux\\uC5D0\\uC11C reducer\\uCABD immutable state\\uB97C immer\\uB85C handling\\uD558\\uB294 \\uC608\\uC81C\\uC774\\uB2E4.\"), mdx(\"h2\", null, \"\\uACF5\\uD1B5\\uCF54\\uB4DC\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import { createAction, handleActions } from \\\"redux-actions\\\";\\nimport produce from \\\"immer\\\";\\n\\n// Action Types\\nexport const INCREMENT = \\\"INCREMENT\\\";\\nexport const increment = createAction(INCREMENT);\\n\\nconst defaultState = {\\n  count: 0,\\n};\\n\")), mdx(\"h2\", null, \"X\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const reducer = handleActions(\\n  {\\n    [INCREMENT]: (baseState) =>\\n      produce(baseState, ({ count }) => {\\n        count = count + 1;\\n      }),\\n  },\\n  defaultState\\n);\\n\\nexport default reducer;\\n\")), mdx(\"h2\", null, \"O\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const reducer = handleActions(\\n  {\\n    [INCREMENT]: (baseState) =>\\n      produce(baseState, (draft) => {\\n        draft.count = draft.count + 1;\\n      }),\\n  },\\n  defaultState\\n);\\n\\nexport default reducer;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"immer 는 객체 비구조화 문법(Object Destructuring)을 사용하면 동작하지 않는다. 아래는 redux에서 reducer쪽 immutable state를 immer로 handling하는 예제이다. 공통코드 X O","timeToRead":1,"banner":null}},"pageContext":{"slug":"/javascript/immer-not-working-deconstruct","formatString":"YYYY.MM.DD"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}