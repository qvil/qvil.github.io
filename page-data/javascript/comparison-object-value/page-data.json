{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/javascript/comparison-object-value","result":{"data":{"post":{"__typename":"MdxPost","slug":"/javascript/comparison-object-value","title":"[Javascript] Comparison object value","date":"2021.04.14","tags":[{"name":"Javascript","slug":"javascript"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[Javascript] Comparison object value\",\n  \"date\": \"2021-04-14T00:00:00.000Z\",\n  \"tags\": [\"Javascript\"],\n  \"slug\": \"javascript/comparison-object-value\",\n  \"banner\": \"/images/js-banner.png\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uAC1D\\uCCB4\\uB294 \\uAE30\\uBCF8\\uC801\\uC73C\\uB85C \\uAC12\\uC774 \\uC544\\uB2C8\\uB77C \\uCC38\\uC870\\uB97C \\uBE44\\uAD50\\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uAC12\\uC774 \\uAC19\\uC544\\uB3C4 \\uCC38\\uC870\\uAC00 \\uB2E4\\uB974\\uBA74 \\uB2E4\\uB978 \\uAC1D\\uCCB4\\uB77C\\uACE0 \\uBCF8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const obj1 = { a: 1 };\\nconst obj2 = { a: 1 };\\n\\nconsole.log(obj1 === obj2); // false\\n\")), mdx(\"h2\", null, \"\\uC774\\uB97C \\uD574\\uACB0\\uD558\\uAE30 \\uC704\\uD558\\uC5EC \\uAC1D\\uCCB4\\uB97C \\uBB38\\uC790\\uC5F4\\uB85C \\uCE58\\uD658\\uD558\\uC5EC \\uBE44\\uAD50\\uD558\\uB294 \\uBC29\\uBC95\\uC774 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const obj1 = { a: 1 };\\nconst obj2 = { a: 1 };\\n\\nJSON.stringify(obj1) === JSON.stringify(obj2); // true\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"객체는 기본적으로 값이 아니라 참조를 비교하기 때문에 값이 같아도 참조가 다르면 다른 객체라고 본다. 이를 해결하기 위하여 객체를 문자열로 치환하여 비교하는 방법이 있다.","timeToRead":1,"banner":null}},"pageContext":{"slug":"/javascript/comparison-object-value","formatString":"YYYY.MM.DD"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}