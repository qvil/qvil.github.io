{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/git/git-os-line-endings","result":{"data":{"post":{"__typename":"MdxPost","slug":"/git/git-os-line-endings","title":"[Git]개행문자문제 해결방법","date":"2017.05.17","tags":[{"name":"git","slug":"git"},{"name":"linux","slug":"linux"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[Git]개행문자문제 해결방법\",\n  \"date\": \"2017-05-17T00:00:00.000Z\",\n  \"tags\": [\"git\", \"linux\"],\n  \"comments\": true,\n  \"share\": true,\n  \"slug\": \"git/git-os-line-endings\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Table of Contents\\n{:toc}\")), mdx(\"h2\", null, \"\\uC6D0\\uC778\"), mdx(\"h3\", null, \"\\uC6B4\\uC601\\uCCB4\\uC81C\\uBCC4\\uB85C \\uAC1C\\uD589\\uBB38\\uC790\\uB97C \\uB2E4\\uB974\\uAC8C \\uC778\\uC2DD\\uD55C\\uB2E4.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC708\\uB3C4\\uC6B0 : CR(Carriage Return \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\\r\"), \")\\uACFC LF(LineFeed \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\\n\"), \")\\uC0AC\\uC6A9\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9AC\\uB205\\uC2A4/\\uB9E5 : LF(LineFeed \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\\n\"), \")\\uB9CC \\uC0AC\\uC6A9\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://stackoverflow.com/questions/10418975/how-to-change-line-ending-settings\"\n  }), \"How to change line-ending settings\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Line ending format used in OS\"), mdx(\"ul\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Windows: CR (Carriage Return \\\\r) and LF (LineFeed \\\\n) pair\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"OSX,Linux: LF (LineFeed \\\\n)\"))), mdx(\"h2\", null, \"\\uD574\\uACB0\\uBC29\\uBC95(2\\uBC88 \\uCD94\\uCC9C)\"), mdx(\"h3\", null, \"1. Git global \\uC124\\uC815 \\uC774\\uC6A9\"), mdx(\"h3\", null, \"\\uB9AC\\uB205\\uC2A4/\\uB9E5\"), mdx(\"p\", null, \"\\uC544\\uB798 \\uC124\\uC815\\uC740 \\uCEE4\\uBC0B\\uD560 \\uB54C CRLF\\uB97C LF\\uB85C \\uBC14\\uAFD4\\uC11C \\uCEE4\\uBC0B\\uD574\\uC900\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"git config --global core.autocrlf input\\n\")), mdx(\"h3\", null, \"\\uC708\\uB3C4\\uC6B0\"), mdx(\"p\", null, \"\\uC544\\uB798 \\uBA85\\uB839\\uC5B4\\uB294 \\uCCB4\\uD06C\\uC778\\uD560 \\uB54C LF\\uB97C CRLF\\uB85C \\uBC14\\uAFD4\\uC900\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"git config --global core.autocrlf true\\n\")), mdx(\"h3\", null, \"2. \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \".gitattributes\"), \" \\uD30C\\uC77C \\uC774\\uC6A9\"), mdx(\"p\", null, \"\\uD504\\uB85C\\uC81D\\uD2B8\\uC758 git root\\uD3F4\\uB354(.git\\uD3F4\\uB354 \\uC788\\uB294 \\uACF3)\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".gitattributes\"), \"\\uD30C\\uC77C\\uC744 \\uB9CC\\uB4E4\\uBA74 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\uBCC4\\uB3C4\\uC758 \\uC124\\uC815\\uC774 \\uD544\\uC694 \\uC5C6\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"* text=auto\\n\")), mdx(\"p\", null, \"\\uC880 \\uB354 \\uBA85\\uC2DC\\uC801\\uC73C\\uB85C \\uC4F0\\uACE0 \\uC2F6\\uB2E4\\uBA74\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"* text eol=crlf\\n* text eol=lf\\n\")), mdx(\"p\", null, \"jpg\\uB97C \\uBC14\\uC774\\uB108\\uB9AC\\uD615\\uD0DC\\uB85C \\uAD00\\uB9AC\\uD558\\uB294 \\uAC83\\uB3C4 \\uAC00\\uB2A5\\uD558\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"*.jpg binary\\n\")), mdx(\"h3\", null, mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \".gitattributes\"), \"\\uD30C\\uC77C \\uC608\\uC2DC \", mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"https://gist.github.com\"\n  }), \"Gist\")), mdx(\"script\", {\n    src: \"https://gist.github.com/qvil/10ba39ee4451278cb8b8222cb7617311.js\"\n  }), mdx(\"h2\", null, \"\\uCC38\\uACE0\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://help.github.com/articles/dealing-with-line-endings/\"\n  }), \"Dealing with line endings(github)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://stackoverflow.com/questions/10418975/how-to-change-line-ending-settings\"\n  }), \"How to change line-ending settings(stackoverflow)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.lesstif.com/pages/viewpage.action?pageId=20776404\"\n  }), \"git \\uC5D0\\uC11C CRLF \\uAC1C\\uD589 \\uBB38\\uC790 \\uCC28\\uC774\\uB85C \\uC778\\uD55C \\uBB38\\uC81C \\uD574\\uACB0\\uD558\\uAE30(lesstif)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Table of Contents\n{:toc} 원인 운영체제별로 개행문자를 다르게 인식한다. 윈도우 : CR(Carriage Return  \\r )과 LF(LineFeed  \\n )사용 리눅스/맥 : LF(LineFeed  \\n )만 사용 How to…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/git/git-os-line-endings","formatString":"YYYY.MM.DD"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}