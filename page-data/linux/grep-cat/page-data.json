{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/linux/grep-cat","result":{"data":{"post":{"__typename":"MdxPost","slug":"/linux/grep-cat","title":"[Linux] grep, cat 사용법","date":"2017.07.05","tags":[{"name":"linux","slug":"linux"},{"name":"grep","slug":"grep"},{"name":"cat","slug":"cat"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[Linux] grep, cat 사용법\",\n  \"date\": \"2017-07-05T00:00:00.000Z\",\n  \"categories\": \"linux\",\n  \"tags\": [\"linux\", \"grep\", \"cat\"],\n  \"comments\": true,\n  \"share\": true,\n  \"slug\": \"linux/grep-cat\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cat\"), \"\\uC740 \\uD30C\\uC77C \\uB0B4\\uC6A9\\uC744 \\uBCF4\\uB294 \\uBA85\\uB839\\uC5B4(\\uB2E4\\uB978 \\uAE30\\uB2A5\\uB3C4 \\uC788\\uB2E4.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"grep\"), \"\\uC740 \\uD328\\uD134(\\uBB38\\uC790\\uC5F4)\\uC744 \\uCC3E\\uB294 \\uBA85\\uB839\\uC5B4\")), mdx(\"h2\", null, \"\\uC608\\uC81C\"), mdx(\"h3\", null, \"text.txt\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apple\\nbanana\\nmelon\\n\")), mdx(\"h3\", null, mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"apple\"), \"\\uACFC \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"banana\"), \"\\uCC3E\\uAE30\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"cat text.txt | grep -E \\\"apple|banana\\\"\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-E\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--extended-regexp)\"), \" \\uC635\\uC158 : \\uD655\\uC7A5 \\uC815\\uADDC\\uD45C\\uD604\\uC2DD\\uC73C\\uB85C \\uD328\\uD134 \\uD574\\uC11D\")), mdx(\"p\", null, \"OR\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"cat text.txt | grep \\\"apple\\\\|banana\\\"\\n\")), mdx(\"h3\", null, \"\\uC751\\uC6A9\"), mdx(\"p\", null, \"app\\uB85C \\uC2DC\\uC791\\uD558\\uB294 \\uD328\\uD134\\uACFC nana\\uB85C \\uC2DC\\uC791\\uD558\\uB294 \\uD328\\uD134\\uCC3E\\uAE30(\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"*\"), \" \\uC560\\uC2A4\\uD130\\uB9AC\\uC2A4\\uD06C \\uC774\\uC6A9)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"cat text.txt | grep -E \\\"app*|nana*\\\"\\n\")), mdx(\"h3\", null, \"\\uACB0\\uACFC\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apple\\nbanana\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"cat 은 파일 내용을 보는 명령어(다른 기능도 있다.) grep 은 패턴(문자열)을 찾는 명령어 예제 text.txt apple 과  banana 찾기 -E ,  --extended-regexp)  옵션 : 확장 정규표현식으로 패턴 해석 OR…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/linux/grep-cat","formatString":"YYYY.MM.DD"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}