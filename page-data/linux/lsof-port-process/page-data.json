{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/linux/lsof-port-process","result":{"data":{"post":{"__typename":"MdxPost","slug":"/linux/lsof-port-process","title":"[Linux] 포트 사용하는 프로세스 찾기","date":"2019.11.11","tags":[{"name":"linux","slug":"linux"},{"name":"lsof","slug":"lsof"},{"name":"port","slug":"port"},{"name":"process","slug":"process"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[Linux] 포트 사용하는 프로세스 찾기\",\n  \"date\": \"2019-11-11 16:13:25 +0900\",\n  \"categories\": \"linux\",\n  \"tags\": [\"linux\", \"lsof\", \"port\", \"process\"],\n  \"slug\": \"linux/lsof-port-process\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"4000\\uBC88 \\uD3EC\\uD2B8\\uB97C \\uC0AC\\uC6A9\\uD558\\uB294 \\uD504\\uB85C\\uC138\\uC2A4\\uB97C \\uCC3E\\uACE0 Kill\\uD558\\uB294 \\uC608\\uC81C\"), mdx(\"p\", null, \"lsof -i:PORT_NUMBER\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"lsof -i:4000\\n\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/images/lsof.png\",\n    \"alt\": \"/images/lsof.png\"\n  }))), mdx(\"p\", null, \"kill -9 PROCESS_NUMBER\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"kill -9 1516\\n\")), mdx(\"h2\", null, \"Reference\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://qvil.github.io/linux/ps-kill-grep-awk/\"\n  }), \"\\uD504\\uB85C\\uC138\\uC2A4 \\uC774\\uB984\\uC744 \\uCC3E\\uC544\\uC11C(ps, grep) \\uD504\\uB85C\\uC138\\uC2A4 \\uBC88\\uD638(awk)\\uB85C \\uC911\\uC9C0(kill)\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"4000번 포트를 사용하는 프로세스를 찾고 Kill하는 예제 lsof -i:PORT_NUMBER kill -9 PROCESS_NUMBER Reference 프로세스 이름을 찾아서(ps, grep) 프로세스 번호(awk)로 중지(kill)","timeToRead":1,"banner":null}},"pageContext":{"slug":"/linux/lsof-port-process","formatString":"YYYY.MM.DD"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}