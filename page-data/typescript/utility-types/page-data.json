{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/typescript/utility-types","result":{"data":{"post":{"__typename":"MdxPost","slug":"/typescript/utility-types","title":"[Typescript] Utility Types","date":"2021.01.22","tags":[{"name":"Typescript","slug":"typescript"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[Typescript] Utility Types\",\n  \"date\": \"2021-01-22T00:00:00.000Z\",\n  \"tags\": [\"Typescript\"],\n  \"slug\": \"typescript/utility-types\",\n  \"banner\": \"/images/ts-banner.png\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uC9C0\\uB09C \\uBC88 \\uC720\\uC6A9\\uD560 \\uAC83 \\uAC19\\uC740 Mapped Types\\uB97C \\uC815\\uB9AC\\uD558\\uACE0 \\uB354 \\uCC3E\\uC544\\uBCF4\\uB2C8 \\uC720\\uC6A9\\uD55C \\uC720\\uD2F8\\uB9AC\\uD2F0 \\uD0C0\\uC785\\uB4E4\\uC774 \\uC788\\uB2E4.\"), mdx(\"p\", null, \"\\uACF5\\uC2DD\\uBB38\\uC11C\\uC5D0 \\uC88B\\uC740 \\uC815\\uBCF4\\uB4E4\\uC774 \\uC788\\uB2E4. \\uAC1C\\uC778\\uC801\\uC73C\\uB85C \\uC720\\uC6A9\\uD55C \\uD0C0\\uC785\\uB4E4\\uC744 \\uAC04\\uCD94\\uB9AC\\uACE0 \\uD544\\uC694\\uD55C \\uACBD\\uC6B0 \\uC774\\uD574\\uB97C \\uB3D5\\uAE30 \\uC704\\uD574 \\uC608\\uC81C\\uB97C \\uC218\\uC815\\uD558\\uC5EC \\uC18C\\uAC1C\\uD55C\\uB2E4.\"), mdx(\"h3\", null, \"Partial\", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"<Type>\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Type\"), \"\\uC758 \\uBAA8\\uB4E0 \\uC18D\\uC131\\uC744 optional\\uB85C \\uB9CC\\uB4E6.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"API GET Return Type\\uC744 \\uC815\\uC758\\uD558\\uACE0 \\uB3D9\\uC77C\\uD55C Type\\uC73C\\uB85C UpdateDTO\\uB97C \\uB9CC\\uB4DC\\uB294 \\uACBD\\uC6B0 \\uC720\\uC6A9\\uD568.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"interface Todo {\\n  title: string;\\n  description: string;\\n}\\n\\nfunction updateTodo(todo: Todo, fieldsToUpdate: Partial<Todo>) {\\n  return { ...todo, ...fieldsToUpdate };\\n}\\n\\nconst todo1 = {\\n  title: \\\"organize desk\\\",\\n  description: \\\"clear clutter\\\",\\n};\\n\\nconst todo2 = updateTodo(todo1, {\\n  description: \\\"throw out trash\\\",\\n});\\n\")), mdx(\"h3\", null, \"Required\", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"<Type>\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Type\"), \"\\uC758 \\uBAA8\\uB4E0 \\uC18D\\uC131\\uC744 required\\uB85C \\uB9CC\\uB4E6. Partial\\uACFC \\uBC18\\uB300\\uB418\\uB294 \\uD0C0\\uC785.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"interface Props {\\n  a?: number;\\n  b?: string;\\n}\\n\\nconst obj: Props = { a: 5 };\\n\\nconst obj2: Required<Props> = { a: 5 };\\n// Property 'b' is missing in type '{ a: number; }' but required in type 'Required<Props>'.\\n\")), mdx(\"h3\", null, \"Record<Keys,Type>\"), mdx(\"p\", null, \"Object\\uC758 key \\uD0C0\\uC785\\uC744 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Keys\"), \", value \\uD0C0\\uC785\\uC744 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Type\"), \"\\uC73C\\uB85C \\uB9CC\\uB4E6.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"interface PageInfo {\\n  title: string;\\n}\\n\\ntype Page = \\\"home\\\" | \\\"about\\\" | \\\"contact\\\";\\n\\nconst nav: Record<Page, PageInfo> = {\\n  about: { title: \\\"about page\\\" },\\n  contact: { title: \\\"contact us\\\" },\\n  home: { title: \\\"home page\\\" },\\n};\\n\\nnav.about;\\n// ^ = const nav: Record\\n//   ^ (property) about: PageInfo\\n\")), mdx(\"h3\", null, \"Pick<Type, Keys>\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Type\"), \"\\uC5D0\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Keys\"), \" \\uD0C0\\uC785\\uC744 \\uC120\\uD0DD\\uD558\\uC5EC \\uD0C0\\uC785\\uC744 \\uB9CC\\uB4E6.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"interface Todo {\\n  title: string;\\n  description: string;\\n  completed: boolean;\\n}\\n\\ntype TodoPreview = Pick<Todo, \\\"title\\\" | \\\"completed\\\">;\\n\\nconst todo: TodoPreview = {\\n  title: \\\"Clean room\\\",\\n  completed: false,\\n};\\n\\ntodo;\\n// ^ = const todo: TodoPreview\\n\")), mdx(\"h3\", null, \"Omit<Type, Keys>\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Type\"), \"\\uC5D0\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Keys\"), \" \\uD0C0\\uC785\\uC744 \\uC81C\\uC678\\uD55C \\uBAA8\\uB4E0 \\uC18D\\uC131\\uC73C\\uB85C \\uD0C0\\uC785\\uC744 \\uB9CC\\uB4E6. Pick\\uACFC \\uBC18\\uB300\\uB418\\uB294 \\uD0C0\\uC785.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"interface Todo {\\n  title: string;\\n  description: string;\\n  completed: boolean;\\n}\\n\\ntype TodoPreview = Omit<Todo, \\\"description\\\">;\\n\\nconst todo: TodoPreview = {\\n  title: \\\"Clean room\\\",\\n  completed: false,\\n};\\n\\ntodo;\\n// ^ = const todo: TodoPreview\\n\")), mdx(\"h3\", null, \"NonNullable\", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"<Type>\")), mdx(\"p\", null, \"Type\\uC5D0\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"null\"), \"\\uACFC \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"undefined\"), \"\\uB97C \\uC81C\\uC678\\uD55C \\uD0C0\\uC785.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"type T0 = NonNullable<string | number | undefined>;\\n//    ^ = type T0 = string | number\\ntype T1 = NonNullable<string[] | null | undefined>;\\n//    ^ = type T1 = string[]\\n\")), mdx(\"p\", null, \"\\uC774 \\uC678\\uC5D0\\uB3C4 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Parameters<Type>\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ReturnType<Type>\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ThisType<Type>\"), \" \\uB4F1 \\uB2E4\\uC591\\uD55C \\uC720\\uD2F8\\uB9AC\\uD2F0 \\uD0C0\\uC785\\uC774 \\uC788\\uB2E4. \\uD0C0\\uC785\\uC2A4\\uD06C\\uB9BD\\uD2B8\\uB97C \\uC0AC\\uC6A9\\uD55C\\uB2E4\\uBA74 \\uC544\\uB798 \\uCC38\\uACE0 \\uB9C1\\uD06C\\uB97C \\uCC38\\uACE0\\uD558\\uC5EC \\uB2E4\\uC591\\uD55C \\uC720\\uD2F8\\uB9AC\\uD2F0 \\uD0C0\\uC785\\uC744 \\uC0AC\\uC6A9\\uD574\\uBCF4\\uAE38 \\uCD94\\uCC9C\\uD55C\\uB2E4.\"), mdx(\"h2\", null, \"\\uCC38\\uACE0\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/docs/handbook/utility-types.html\"\n  }), \"https://www.typescriptlang.org/docs/handbook/utility-types.html\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"지난 번 유용할 것 같은 Mapped Types를 정리하고 더 찾아보니 유용한 유틸리티 타입들이 있다. 공식문서에 좋은 정보들이 있다. 개인적으로 유용한 타입들을 간추리고 필요한 경우 이해를 돕기 위해 예제를 수정하여 소개한다. Partial…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/typescript/utility-types","formatString":"YYYY.MM.DD"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}