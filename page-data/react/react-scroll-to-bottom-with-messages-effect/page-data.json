{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/react/react-scroll-to-bottom-with-messages-effect","result":{"data":{"post":{"__typename":"MdxPost","slug":"/react/react-scroll-to-bottom-with-messages-effect","title":"[React] React scroll to bottom","date":"2021.05.14","tags":[{"name":"React","slug":"react"},{"name":"Scroll","slug":"scroll"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[React] React scroll to bottom\",\n  \"date\": \"2021-05-14T00:00:00.000Z\",\n  \"tags\": [\"React\", \"Scroll\"],\n  \"slug\": \"react/react-scroll-to-bottom-with-messages-effect\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"React \\uCC44\\uD305\\uC571 \\uCC44\\uD305 \\uC804\\uC1A1 \\uC2DC scrollToBottom \\uAD6C\\uD604\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"ref\\uB85C Element\\uC758 scrollTop\\uC744 scrollHeight\\uB85C \\uBCC0\\uACBD\\uD574\\uC8FC\\uB294 scrollToBottom \\uD568\\uC218 \\uAD6C\\uD604\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"useEffect\\uB85C messages state\\uBCC0\\uACBD \\uC2DC scrollToBottom\\uD568\\uC218 \\uD638\\uCD9C\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"const messageBoxRef = useRef<HTMLUListElement>();\\nconst [messages, setMessages] = useState();\\n\\nconst scrollToBottom = () => {\\n  if (messageBoxRef.current) {\\n    messageBoxRef.current.scrollTop = messageBoxRef.current.scrollHeight;\\n  }\\n};\\n\\nuseEffect(() => {\\n  scrollToBottom();\\n}, [messages]);\\n\\n<div ref={messageBoxRef}>{renderChat()}</div>;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"React 채팅앱 채팅 전송 시 scrollToBottom 구현 ref로 Element의 scrollTop을 scrollHeight로 변경해주는 scrollToBottom 함수 구현 useEffect로 messages state…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/react/react-scroll-to-bottom-with-messages-effect","formatString":"YYYY.MM.DD"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}