{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx","path":"/tags/typescript","result":{"data":{"allPost":{"nodes":[{"__typename":"MdxPost","slug":"/typescript/conditional-interface-in-react-component","title":"[Typescript] Typescript conditional interface in react component","date":"2022.05.18","excerpt":"컴포넌트에 특정 prop이 있으면 나머지 prop은 optional 처리하는 interface id만 있는 경우(id로 데이터 페칭하는 경우) content가 있는 경우 description은 required 모두 optional 처리하지 않고 id…","timeToRead":1,"description":null,"tags":[{"name":"Typescript","slug":"typescript"},{"name":"React","slug":"react"}]},{"__typename":"MdxPost","slug":"/typescript/type-from-object-key","title":"[Typescript] Type from object key","date":"2021.12.21","excerpt":"Object의 Key를 Type으로 사용하려면 keyof typeof Object","timeToRead":1,"description":null,"tags":[{"name":"Typescript","slug":"typescript"}]},{"__typename":"MdxPost","slug":"/typescript/differences-between-type-aliases-and-interfaces","title":"[Typescript] Differences Between Type Aliases and Interfaces, Type과 Interface 차이점","date":"2021.06.09","excerpt":"요약 Type과 Interface는 거의 모든 기능이 유사하다. 대분분의 경우 취향에 따라 선택 가능. Type은 Declare merging 불가능. 그러나 Interface는 가능 Interface는 object…","timeToRead":1,"description":null,"tags":[{"name":"Typescript","slug":"typescript"},{"name":"Type","slug":"type"},{"name":"Interface","slug":"interface"}]},{"__typename":"MdxPost","slug":"/typescript/typescript-with-babel","title":"[Typescript] 왜 Typescript와 Babel을 함께 사용해야 하는가?","date":"2021.04.19","excerpt":"Typescript가 ES6+문법을 ES5- Javascript로 변환해준다면 Babel은 필요한가? 상황에 따라 다름.  아래 구체적인 설명 Babel vs  tsc  for TypeScript Build output이 source input…","timeToRead":1,"description":null,"tags":[{"name":"Typescript","slug":"typescript"},{"name":"Babel","slug":"babel"}]},{"__typename":"MdxPost","slug":"/typescript/nullish-coalescing","title":"[Typescript] Nullish Coalescing (??) Check null/undefined with question operator","date":"2021.04.18","excerpt":"?? 연산자는 null이나 undefined인 경우만 막아준다. 0이나 false는 그대로 유지한다. 값이 undefined, null만 체크하고 싶을 때(0, false 제외) 삼항연산자 대신 사용 가능하다. Test null/undefined…","timeToRead":1,"description":null,"tags":[{"name":"Typescript","slug":"typescript"}]},{"__typename":"MdxPost","slug":"/error/react-typescript-extension","title":"[Error] (TS2749) refers to a value, but is being used as a type here","date":"2021.04.17","excerpt":".ts에서 JSX 문법을 사용한 경우 생기는 에러. import를 정상적으로 인식 못하고 값을 참조했는데 값이 아닌 참조 어쩌구 에러 뜸 파일 확장자를  .tsx 로 바꿔주면 해결 참고 https://stackoverflow.com/questions…","timeToRead":1,"description":null,"tags":[{"name":"Error","slug":"error"},{"name":"Typescript","slug":"typescript"},{"name":"React","slug":"react"}]},{"__typename":"MdxPost","slug":"/typescript/declare-custom-property-type-of-global-object","title":"[Typescript] declare custom property type of global object(window/global)","date":"2021.03.19","excerpt":"Global object(Browser: window/Node.js: global)에 custom property를 추가해야되는데 타입에러가 생기는 경우 아래와 같이 타입 선언을 해서 사용","timeToRead":1,"description":null,"tags":[{"name":"Typescript","slug":"typescript"}]},{"__typename":"MdxPost","slug":"/error/react-use-type-error","title":"[Error] react-use/lib/useGetSet.d.ts Type error: ',' expected.","date":"2021.03.10","excerpt":"react-use/lib/useGetSet.d.ts Type error: ',' expected. Typescript v3.9에서 생긴 이슈. Tyescript v4.2로 업그레이드해서 해결","timeToRead":1,"description":null,"tags":[{"name":"Error","slug":"error"},{"name":"Typescript","slug":"typescript"},{"name":"React","slug":"react"},{"name":"React-use","slug":"react-use"}]},{"__typename":"MdxPost","slug":"/typescript/utility-types","title":"[Typescript] Utility Types","date":"2021.01.22","excerpt":"지난 번 유용할 것 같은 Mapped Types를 정리하고 더 찾아보니 유용한 유틸리티 타입들이 있다. 공식문서에 좋은 정보들이 있다. 개인적으로 유용한 타입들을 간추리고 필요한 경우 이해를 돕기 위해 예제를 수정하여 소개한다. Partial…","timeToRead":1,"description":null,"tags":[{"name":"Typescript","slug":"typescript"}]},{"__typename":"MdxPost","slug":"/typescript/mapped-types","title":"[Typescript] Mapped Types","date":"2021.01.21","excerpt":"Type형식은 같은데 모두 optional 혹은 readonly로 property type을 바꾸고 싶은 경우 함수처럼 사용 예 name과 age가 필수인 UserType을 PUT이나 PATCH 등 Optional property를 가진 DTO…","timeToRead":1,"description":null,"tags":[{"name":"Typescript","slug":"typescript"}]}]}},"pageContext":{"slug":"typescript","name":"Typescript","formatString":"YYYY.MM.DD"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}