{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/error/react-typescript-extension","result":{"data":{"post":{"__typename":"MdxPost","slug":"/error/react-typescript-extension","title":"[Error] (TS2749) refers to a value, but is being used as a type here","date":"2021.04.17","tags":[{"name":"Error","slug":"error"},{"name":"Typescript","slug":"typescript"},{"name":"React","slug":"react"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[Error] (TS2749) refers to a value, but is being used as a type here\",\n  \"date\": \"2021-04-17T00:00:00.000Z\",\n  \"tags\": [\"Error\", \"Typescript\", \"React\"],\n  \"slug\": \"error/react-typescript-extension\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \".ts\\uC5D0\\uC11C JSX \\uBB38\\uBC95\\uC744 \\uC0AC\\uC6A9\\uD55C \\uACBD\\uC6B0 \\uC0DD\\uAE30\\uB294 \\uC5D0\\uB7EC.\"), mdx(\"p\", null, \"import\\uB97C \\uC815\\uC0C1\\uC801\\uC73C\\uB85C \\uC778\\uC2DD \\uBABB\\uD558\\uACE0 \\uAC12\\uC744 \\uCC38\\uC870\\uD588\\uB294\\uB370 \\uAC12\\uC774 \\uC544\\uB2CC \\uCC38\\uC870 \\uC5B4\\uCA4C\\uAD6C \\uC5D0\\uB7EC \\uB738\"), mdx(\"p\", null, \"\\uD30C\\uC77C \\uD655\\uC7A5\\uC790\\uB97C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".tsx\"), \"\\uB85C \\uBC14\\uAFD4\\uC8FC\\uBA74 \\uD574\\uACB0\"), mdx(\"h2\", null, \"\\uCC38\\uACE0\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/62059408/reactjs-and-typescript-refers-to-a-value-but-is-being-used-as-a-type-here-ts\"\n  }), \"https://stackoverflow.com/questions/62059408/reactjs-and-typescript-refers-to-a-value-but-is-being-used-as-a-type-here-ts\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":".ts에서 JSX 문법을 사용한 경우 생기는 에러. import를 정상적으로 인식 못하고 값을 참조했는데 값이 아닌 참조 어쩌구 에러 뜸 파일 확장자를  .tsx 로 바꿔주면 해결 참고 https://stackoverflow.com/questions…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/error/react-typescript-extension","formatString":"YYYY.MM.DD"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}