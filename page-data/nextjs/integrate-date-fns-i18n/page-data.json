{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/nextjs/integrate-date-fns-i18n","result":{"data":{"post":{"__typename":"MdxPost","slug":"/nextjs/integrate-date-fns-i18n","title":"[Next.js] Integrate date-fns i18n","date":"2021.03.19","tags":[{"name":"Next.js","slug":"next-js"},{"name":"date-fns","slug":"date-fns"},{"name":"i18n","slug":"i-18-n"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[Next.js] Integrate date-fns i18n\",\n  \"date\": \"2021-03-19T00:00:00.000Z\",\n  \"tags\": [\"Next.js\", \"date-fns\", \"i18n\"],\n  \"slug\": \"nextjs/integrate-date-fns-i18n\",\n  \"banner\": \"./nextjs-logo.png\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Next.js\\uC5D0 date-fns\\uB97C \\uC801\\uC6A9\\uD560 \\uB54C Server\\uC640 Client\\uD658\\uACBD \\uBAA8\\uB450 \\uC124\\uC815\\uC744 \\uD574\\uC918\\uC57C\\uD55C\\uB2E4.\"), mdx(\"h3\", null, \"0. Setup Next.js\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nextjs.org/docs/advanced-features/i18n-routing\"\n  }), \"Internationalized Routing\\n\"), \"\\uC744 \\uC0AC\\uC6A9\\uD55C\\uB2E4\\uBA74\"), mdx(\"p\", null, \"next.config.js\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"module.exports = {\\n  i18n: {\\n    locales: [\\\"ko\\\", \\\"en\\\"],\\n    defaultLocale: \\\"ko\\\",\\n  },\\n};\\n\")), mdx(\"h3\", null, \"1. Create custom \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"format\"), \" function\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://date-fns.org/v2.19.0/docs/I18n\"\n  }), \"date-fns\\uC758 i18n \\uBB38\\uC11C\"), \"(Check version!)\\uB97C \\uCC38\\uACE0\\uD558\\uBA74 \\uC544\\uB798\\uC640 \\uAC19\\uC774 date-fns\\uC758 format function\\uC744 customizing\\uD574\\uC11C \\uC0AC\\uC6A9\\uD558\\uB294 \\uBC29\\uC2DD\\uC774\\uB2E4.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Global object\\uC758(Browser: window/Node.js: global) custom property\\uB97C \\uC0AC\\uC6A9\\uD558\\uBBC0\\uB85C declare \\uD574\\uC918\\uC57C\\uD55C\\uB2E4. \\uCC38\\uACE0: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/typescript/declare-custom-property-type-of-global-object\"\n  }), \"[Typescript] declare custom property type of global object(window/global)\"))), mdx(\"p\", null, \"date.ts\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { format as fnsFormat, Locale } from \\\"date-fns\\\";\\nimport { ko, enUS } from \\\"date-fns/locale\\\";\\n\\ntype DateType = number | Date;\\n\\nconst locales: Record<string, Locale> = { ko, enUS };\\n\\n// by providing a default string of 'PP' or any of its variants for `formatStr`\\n// it will format dates in whichever way is appropriate to the locale\\nexport const format = (date: DateType, formatStr = \\\"PP\\\") => {\\n  const locale =\\n    typeof window !== \\\"undefined\\\"\\n      ? locales[window.__localeId__]\\n      : locales[global.__localeId__]; // Check browser, server\\n\\n  return fnsFormat(date, formatStr, {\\n    locale,\\n  });\\n};\\n\")), mdx(\"h3\", null, \"2. Setup server side\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App\"), \" currently does not support Next.js \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nextjs.org/docs/basic-features/data-fetching\"\n  }), \"Data Fetching methods\"), \" like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getStaticProps\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getServerSideProps\"), \".\")), mdx(\"p\", null, \"_\", \"app.tsx\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"MyApp.getInitialProps = async (appContext: AppContext) => {\\n  const { router } = appContext;\\n  const locale = router.locale; // 'ko' or 'en'\\n  const appProps = await App.getInitialProps(appContext);\\n\\n  global.__localeId__ = locale;\\n\\n  return { ...appProps };\\n};\\n\")), mdx(\"h3\", null, \"3. Setup client side\"), mdx(\"p\", null, \"_\", \"document.tsx\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"loadWindowProperty = (locale) => (\\n  <script\\n    dangerouslySetInnerHTML={{\\n      __html: `window.__localeId__ = \\\"${locale}\\\"`,\\n    }}\\n  ></script>\\n);\\n\\nrender() {\\n  const { loadWindowProperty } = this;\\n  const { locale } = this.props; // 'ko' or 'en'\\n\\n  return (\\n    <Html>\\n      <body>\\n        {loadWindowProperty(locale)}\\n\")), mdx(\"h4\", null, \"4. Use custom \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"format\"), \" function\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"import { format } from \\\"src/libs/date\\\";\\n\\nformat(Date.now(), \\\"MMM d',' Y\\\");\\n\")), mdx(\"h2\", null, \"\\uCC38\\uACE0\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://date-fns.org/v2.19.0/docs/I18n\"\n  }), \"https://date-fns.org/v2.19.0/docs/I18n\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://nextjs.org/docs/advanced-features/custom-app#caveats\"\n  }), \"https://nextjs.org/docs/advanced-features/custom-app#caveats\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Next.js에 date-fns를 적용할 때 Server와 Client환경 모두 설정을 해줘야한다. 0. Setup Next.js Internationalized Routing\n 을 사용한다면 next.config.js 1. Create custom…","timeToRead":1,"banner":{"childImageSharp":{"resize":{"src":"/static/dd054ea2aa49bdc30da5e4148174e206/73f08/nextjs-logo.png"}}}}},"pageContext":{"slug":"/nextjs/integrate-date-fns-i18n","formatString":"YYYY.MM.DD"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}